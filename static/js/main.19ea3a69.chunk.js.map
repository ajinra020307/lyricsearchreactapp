{"version":3,"sources":["components/spinner.gif","components/layouts/Navbar.jsx","context.jsx","components/layouts/spinner.jsx","components/tracks/Track.jsx","components/tracks/Tracks.jsx","components/tracks/Search.jsx","components/layouts/Index.jsx","components/tracks/Lyrics.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Navbar","class","className","Context","React","createContext","reducer","state","action","type","tracklist","payload","heading","Provider","dispatch","setState","fetch","then","res","json","data","message","body","track_list","catch","e","console","log","value","this","props","children","Component","Consumer","Spinner","src","spinner","alt","style","width","margin","display","Track","track","artist_name","track_name","album_name","to","track_id","Tracks","length","Fragment","map","i","key","Search","input","handleinput","target","handlesubmit","preventDefault","url","render","onSubmit","bind","textAlign","placeholder","onChange","Index","Lyrics","undefined","lyrics","match","params","id","alert","url2","lyrics_body","track_rating","explicit","href","track_share_url","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19ea3a69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.75ae2ba2.gif\";","import React from 'react'\r\n\r\n\r\nconst Navbar=function(){\r\n    \r\n    return (\r\n        <div class=\"Navbar\">\r\n            <nav className='navbar navbar-dark bg-primary mb5'>\r\n                <span className='navbar-brand mb0 h1 mx-auto'>Lyric search</span>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nconst Context=React.createContext()\r\nconst reducer=(state,action)=>{\r\n    switch(action.type){\r\n        case 'searchtracks':\r\n            return {\r\n                ...state,\r\n                tracklist:action.payload,\r\n                heading:action.heading\r\n            }\r\n            case 'spinner':\r\n              return {\r\n                  ...state,\r\n                  tracklist:action.payload,\r\n                  heading:''\r\n              }\r\n            default:\r\n               return state\r\n    }\r\n}\r\n\r\nexport class Provider extends React.Component{\r\n    state={\r\n        tracklist:[],\r\n        heading:'Top Tracks This Week',\r\n        dispatch:(action)=> this.setState(state=>reducer(state,action))\r\n        \r\n    }\r\n    componentDidMount(){\r\n        let url=`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=50&country=IN&f_has_lyrics=1&apikey=c79d8f8eff20ce381c5fa0c607472208`\r\n     \r\n        fetch(url).then(res=>{\r\n            \r\n            return res.json()\r\n        }).then(data=>{\r\n           \r\n            this.setState({tracklist:data.message.body.track_list})\r\n        }).catch(e=>{console.log('error' + e)})\r\n    }\r\n    render(){\r\n        return(\r\n          <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n          </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const Consumer=Context.Consumer","import React from 'react'\r\nimport spinner from'../spinner.gif'\r\nfunction Spinner(){\r\n    return (\r\n      <div>\r\n          <img src={spinner} alt=\"loading.....\"\r\n          style={{width:'100px', margin:'auto', display:'block'}}/>\r\n      </div>\r\n    )\r\n}\r\nexport default Spinner","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Track extends React.Component{\r\n    render(){\r\n        const {track}=this.props\r\n        return(\r\n          <div className='col-md-4'>\r\n              <div class=\"card mb-4 shawdow-sm\">\r\n                  <div class=\"card-body\">\r\n                      <h4>{track.artist_name}</h4>\r\n                      <p className='card-text'>\r\n                          <strong> <i className='fas fa-play'></i>Track:</strong>{track.track_name}\r\n                          <br />\r\n                          <strong> <i className='fas fa-compact-disc'></i>Album:</strong>{track.album_name}\r\n                      </p>\r\n                      <Link to={`lyrics/track/${track.track_id}`} className='btn btn-primary btn-block'>\r\n                          <i className='fas fa-chevron-right'></i>\r\n                          view Lyrics\r\n                      </Link>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Track","import React from 'react'\r\nimport {Consumer} from '../../context'\r\nimport Spinner from '../layouts/spinner'\r\nimport Track from './Track'\r\n\r\nclass Tracks extends React.Component{\r\n    render(){\r\n       \r\n        return(\r\n          <Consumer>\r\n              {\r\n                 value=>{\r\n                     if(value.tracklist.length>0){\r\n                          const {tracklist,heading}=value\r\n                         return (\r\n                             <React.Fragment>\r\n                                <h2 className='text-center mb-4 mt-4'>{heading}</h2>\r\n                                 <div className='row'>\r\n                                   \r\n                                    {tracklist.map((track,i)=>{    \r\n                                       return  <Track key={track.track.track_id} track={track.track}/>\r\n                                     })}\r\n                                 </div>\r\n                            </React.Fragment>)\r\n                     }else{\r\n                         return <Spinner/>\r\n                     }\r\n                 }   \r\n              }\r\n          </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Tracks","import React from 'react'\r\nimport {Consumer} from '../../context'\r\n\r\nclass Search extends React.Component{\r\n    state={\r\n        input:''     \r\n    }\r\n    handleinput=(e)=>{\r\n        this.setState({input:e.target.value})\r\n    }\r\n    handlesubmit=(dispatch,e)=>{\r\n        e.preventDefault()\r\n        dispatch({\r\n                  type:'spinner',\r\n                  payload:[],\r\n                  \r\n              })\r\n        let url=`https://cors-anywhere.herokuapp.com/http://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.input}&page_size=20&page=1&s_track_rating=desc&apikey=c79d8f8eff20ce381c5fa0c607472208`\r\n        fetch(url)\r\n          .then(res=>res.json())\r\n          .then(data=>{\r\n              dispatch({\r\n                  type:'searchtracks',\r\n                  payload:data.message.body.track_list,\r\n                  heading:`search results for ${this.state.input}`\r\n              })\r\n              this.setState({input:\"\"})\r\n          })\r\n    }\r\n    render=()=>{\r\n         return (      \r\n              <Consumer>\r\n                 {value=>{\r\n                     let {dispatch}=value\r\n                     return (\r\n                         <div className='card card-body mb-4 p-4'>\r\n                             <h1 className=\"display-4 text-center mb-0\">\r\n                                 <i className='fas fa-music pr-4'></i>\r\n                                 Search For A song\r\n                             </h1>\r\n                             <p className=\"lead text-center\">\r\n                                 Find any songs you like\r\n                             </p>\r\n                             <form onSubmit={this.handlesubmit.bind(this,dispatch)}>\r\n                                 <div className='form-group' style={{textAlign:'center'}}>\r\n                                     <input type=\"text\" className=\"from-control form-control-lg display-block\" placeholder='Search Here' style={{width:'100%'}}\r\n                                     value={this.state.input}\r\n                                     onChange={this.handleinput}/>\r\n                                     <br/>     \r\n                                 </div>\r\n                                 <button className={'btn btn-danger btn-lg btn-block pl-10 pr-10 mt-2'} type='submit'>Search</button>\r\n                             </form>\r\n                         </div>\r\n                     )\r\n                 }}\r\n              </Consumer>\r\n            )\r\n    }\r\n   \r\n}\r\nexport default Search","import React from 'react'\r\nimport Tracks from '../tracks/Tracks'\r\nimport Search from '../tracks/Search'\r\n\r\nconst Index=function(){\r\n    \r\n    return (\r\n        <React.Fragment>\r\n           <Search />      \r\n\r\n           <Tracks />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Index","import React from 'react'\r\nimport Spinner from '../layouts/spinner'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Lyrics extends React.Component{\r\n    state={\r\n        track:undefined,\r\n        lyrics:undefined\r\n    }\r\n    componentDidMount(){\r\n        const url=`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=c79d8f8eff20ce381c5fa0c607472208`\r\n        fetch(url)\r\n            .then(res=>{return res.json()})\r\n            .then(data=>{\r\n                this.setState({lyrics:data.message.body.lyrics})\r\n            })\r\n            .catch(e=>alert(e))\r\n        \r\n        const url2=`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=c79d8f8eff20ce381c5fa0c607472208`\r\n        \r\n        fetch(url2)\r\n           .then(res=>res.json())\r\n           .then(data=>{\r\n            this.setState({track:data.message.body.track})\r\n          })\r\n           .catch(e=>{alert(e)})\r\n        \r\n    }\r\n    render(){\r\n        const {track,lyrics}=this.state\r\n        \r\n        if(track===undefined || lyrics===undefined){\r\n            return <Spinner />\r\n        \r\n        }else{\r\n            console.log(track)\r\n            return (\r\n              <React.Fragment>\r\n                   \r\n                    <div className=\"card\">\r\n                        <h5 className=\"card-header\">\r\n                            {track.track_name} by <span className='text-secondary'>{track.artist_name}</span>\r\n                        </h5>\r\n                        <div className=\"card-body\">\r\n                            <p className=\"card-text\">\r\n                                {lyrics.lyrics_body}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <ul className=\"list-group mt-3\">\r\n                       \r\n                        <li className='list-group-item'>\r\n                            <strong>Track Rating: </strong>\r\n                            {track.track_rating}\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                           <strong>Explicit-words: </strong>\r\n                            {track.explicit===0? 'no':'yes'}\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                            <strong>Full Lyrics: </strong>\r\n                            <a href={track.track_share_url}>Click here</a>\r\n                            \r\n                        </li>\r\n                    </ul>\r\n                     <Link to='/' className='btn btn-danger mb4'>\r\n                        Back to home\r\n                    </Link>\r\n              </React.Fragment>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default Lyrics","import React from 'react';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport Navbar from './components/layouts/Navbar'\nimport Index from './components/layouts/Index'\nimport './App.css';\nimport './bootstrap.min.css'\nimport {Provider} from './context'\nimport Lyrics from './components/tracks/Lyrics'\n\nfunction App() {\n  return (\n      <Provider>\n      <Router>  \n        <React.Fragment>\n         \n          <Navbar />\n          <div className=\"container\">\n              <Switch>\n                  <Route exact path='/' component={Index}></Route>\n                  <Route exact path='/lyrics/track/:id' component={Lyrics}></Route>\n              </Switch>\n          </div>\n        </React.Fragment>   \n      </Router>\n      </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}